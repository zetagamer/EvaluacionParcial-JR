using System;
using System.Collections.Generic;

public abstract class Product
{
    public int Id { get; set; }
    public string Description { get; set; }
    public decimal Price { get; set; }
    public float Tax { get; set; }

    public abstract decimal GetValue();

    public override string ToString()
    {
        return $"{Id} {Description}\n" +
               $"       Price......: {Price:C}\n" +
               $"       Tax........: {Tax:P}\n" +
               $"       Value......: {GetValue():C}\n";
    }
}

public class FixedPriceProduct : Product
{
    public override decimal GetValue()
    {
        return Price * (1 + Tax / 100);
    }
}

public class VariablePriceProduct : Product
{
    public string Measurement { get; set; }
    public float Quantity { get; set; }

    public override decimal GetValue()
    {
        return (Price * Quantity) * (1 + Tax / 100);
    }

    public override string ToString()
    {
        return base.ToString() +
               $"       Measurement: {Measurement}\n" +
               $"       Quantity...: {Quantity:F2}\n";
    }
}

public class ComposedProduct : Product
{
    public List<Product> Products { get; set; }
    public float Discount { get; set; }

    public override decimal GetValue()
    {
        decimal total = 0;
        foreach (var product in Products)
        {
            total += product.GetValue();
        }
        return total * (1 - Discount / 100);
    }

    public override string ToString()
    {
        return base.ToString() +
               $"       Products...: {string.Join(", ", Products.Select(p => p.Description))}\n" +
               $"       Discount...: {Discount:P}\n";
    }
}

public class Invoice
{
    private List<Product> products = new List<Product>();

    public void AddProduct(Product product)
    {
        products.Add(product);
    }

    public override string ToString()
    {
        decimal total = 0;
        string result = "RECEIPT\n-------------------------------------------------\n";
        foreach (var product in products)
        {
            result += product.ToString();
            total += product.GetValue();
        }
        result += "\n                   =============\n" +
                   $"TOTAL:               {total:C}\n";
        return result;
    }
}

class Program
{
    static void Main(string[] args)
    {
        Console.WriteLine("PRODUCTS");
        Console.WriteLine("-------------------------------------------------");

        Product product1 = new FixedPriceProduct()
        {
            Description = "Vino Gato Negro",
            Id = 1010,
            Price = 46000M,
            Tax = 0.19F
        };

        Product product2 = new FixedPriceProduct()
        {
            Description = "Pan Bimbo Artesanal",
            Id = 2020,
            Price = 1560M,
            Tax = 0.19F
        };

        Product product3 = new VariablePriceProduct()
        {
            Description = "Queso Holandes",
            Id = 3030,
            Measurement = "Kilo",
            Price = 32000M,
            Quantity = 0.536F,
            Tax = 0.19F
        };

        Product product4 = new VariablePriceProduct()
        {
            Description = "Cabano",
            Id = 4040,
            Measurement = "Kilo",
            Price = 18000M,
            Quantity = 0.389F,
            Tax = 0.19F
        };

        Product product5 = new ComposedProduct()
        {
            Description = "Ancheta #1",
            Discount = 0.12F,
            Id = 5050,
            Products = new List<Product>() { product1, product2, product3, product4 }
        };

        Console.WriteLine(product1);
        Console.WriteLine(product2);
        Console.WriteLine(product3);
        Console.WriteLine(product4);
        Console.WriteLine(product5);

        Invoice invoice = new Invoice();
        invoice.AddProduct(product1);
        invoice.AddProduct(product3);
        invoice.AddProduct(product5);

        Console.WriteLine(invoice);
    }
}